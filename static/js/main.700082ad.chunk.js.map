{"version":3,"sources":["serviceWorker.js","DetailedExpansionPanel.js","SylabyPanel.js","config.js","index.js"],"names":["Boolean","window","location","hostname","match","DetailedExpansionPanel","state","settings","_this","props","jsonError","jsonParseFailed","save","onSave","validateJson","text","JSON","parse","setState","e","settingsOnChange","event","value","target","classes","this","text_class","textFieldError","textField","react_default","a","createElement","className","root","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","Typography_default","heading","ExpansionPanelDetails_default","details","TextField_default","id","label","multiline","rows","defaultValue","margin","variant","onChange","Divider_default","ExpansionPanelActions_default","Button_default","size","color","onClick","Component","withStyles","theme","width","fontSize","typography","pxToRem","secondaryHeading","palette","secondary","icon","verticalAlign","height","alignItems","flexBasis","helper","borderLeft","concat","divider","padding","spacing","unit","link","primary","main","textDecoration","&:hover","marginLeft","marginRight","backgroundColor","SylabyPanel","searchNumber","outputText","config","getTextByNumber","number","t","undefined","handleSearchChange","handleSubmitSearch","preventDefault","saveSettings","s","Fragment","CssBaseline_default","Grid_default","container","justify","grid","item","xs","Paper_default","paper","onSubmit","FormControl_default","formControl","InputLabel_default","htmlFor","Input_default","numberInput","searchText","src_DetailedExpansionPanel","stringify","flexGrow","overflow","backgroundSize","backgroundPosition","marginTop","paddingBottom","textAlign","fab","extendedIcon","getConfig","cleaned","split","map","trim","filter","x","length","out","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","Object","slicedToArray","index","val","err","return","ReactDOM","render","src_SylabyPanel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.700082ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20,\n    },\n    details: {\n      alignItems: 'center',\n    },\n    column: {\n      flexBasis: '33.33%',\n    },\n    helper: {\n      borderLeft: `2px solid ${theme.palette.divider}`,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 870,\n      backgroundColor: \"white\",\n    },\n    textFieldError: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 870,\n      backgroundColor: \"red\",\n    },\n  })\n  \n  //function DetailedExpansionPanel(props) {\nclass DetailedExpansionPanel extends Component {\n    state = {\n      settings: this.props.settings,\n      jsonError: false,\n      jsonParseFailed: false,\n    }\n\n    save = () => {\n      this.props.onSave(this.state.settings)\n    }\n\n    validateJson = (text) => {\n      try {\n        JSON.parse(text)\n        this.setState({jsonParseFailed: false})\n      } catch (e) {\n        this.setState({jsonParseFailed: true})\n      }\n    }\n\n    settingsOnChange = (event) => {\n      const value = event.target.value\n      this.validateJson(value)\n      this.setState( {settings: value} )\n    }\n\n    render() {\n      const { classes } = this.props\n      const settings = this.state.settings\n      const text_class = this.state.jsonParseFailed ? classes.textFieldError : classes.textField\n\n      return (\n        <div className={classes.root}>\n          <ExpansionPanel >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <div className={classes.column}>\n                <Typography className={classes.heading}>Ustawienia</Typography>\n              </div>\n\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n              <div className={classes.column}>\n                  <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Mapowanie\"\n                      multiline\n                      rows=\"10\"\n                      defaultValue={settings}\n                      className={ text_class  }\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.settingsOnChange}\n                    />\n              </div>\n            </ExpansionPanelDetails>\n            <Divider />\n            <ExpansionPanelActions>\n              <Button size=\"small\" color=\"primary\" onClick={this.save}>\n                Zapisz\n              </Button>\n            </ExpansionPanelActions>\n          </ExpansionPanel>\n        </div>\n      )\n    }\n  }\n  \n  DetailedExpansionPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onSave: PropTypes.func.isRequired,\n    settings: PropTypes.string.isRequired,\n  }\n  \n  export default withStyles(styles)(DetailedExpansionPanel)","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper'\n\nimport DetailedExpansionPanel from './DetailedExpansionPanel'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'grey',\n    overflow: 'hidden',\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1000\n  },\n  paper: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n  numberInput: {\n    fontSize: '30px',\n    textAlign: 'center',\n  },\n  outputText: {\n      fontSize: '140px',\n  },\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n})\n\n\n\nclass SylabyPanel extends Component {\n    state = {\n        searchNumber: 'Number',\n        outputText: 'brak',\n        settings: this.props.config\n    }\n\n    getTextByNumber = (number) => {\n        let t = this.state.settings[this.state.searchNumber]\n        if (t === undefined) {\n            t = 'brak'\n        }\n        return t\n    }\n\n    handleSearchChange = (event) => {\n        const value = event.target.value\n        this.setState({ searchNumber: value })\n    }\n\n    handleSubmitSearch = (event) => {\n        event.preventDefault()\n        const number = event.target.value\n        this.setState({ outputText: this.getTextByNumber(number) })\n    }\n\n    saveSettings = (s) => {\n        this.setState({ settings: JSON.parse(s) })\n    }\n\n    render() {\n        const { classes } = this.props\n        const settings = this.state.settings\n\n        return (\n          <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n              <Grid container justify=\"center\"> \n                <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n                  <Grid item xs={12}>\n                    <div className={classes.root}>\n                        <Paper className={classes.paper}>\n                            <form onSubmit={this.handleSubmitSearch}>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"component-simple\">Numer</InputLabel>\n                                    <Input className={classes.numberInput}\n                                        id=\"component-simple\" \n                                        value={this.state.searchText} \n                                        onChange={this.handleSearchChange}\n                                    />\n                                </FormControl>\n                            </form>\n                        </Paper>\n                        <Paper className={classes.paper}>\n                          <div className={classes.outputText}>{this.state.outputText}</div>\n                      </Paper>       \n                      <DetailedExpansionPanel settings={JSON.stringify(settings)} onSave={this.saveSettings}/>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <div>\n            </div>\n            </div>\n\n          </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(SylabyPanel)\n\n","\nconst getConfig = () => {\n    const s = 'na ma za nie ba ci do po cze ra mu ro sz szy my ro  rz ch cha rze ni mi  by  cza sza  su cz rzu ta ka   go czy te to  re lo  lu  si ci wy ka zy zo rzy ży im ki de me szo wi ku bu du je wi le be pe pu cha he czo się ru dą'\n    const cleaned = s.split(' ').map(s => s.trim()).filter(x => x.length > 0)\n    const out = {}\n    for (let [index, val] of cleaned.entries()) {\n        out[index + 1] = val\n    }    \n    return out\n}\n\nexport default getConfig\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport SylabyPanel from './SylabyPanel' \nimport getConfig from './config'\n\n\nReactDOM.render(<SylabyPanel config={getConfig()} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}